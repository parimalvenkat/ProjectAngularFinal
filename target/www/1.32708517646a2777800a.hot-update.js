webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/entities/application/application-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar router_1 = __webpack_require__(\"./node_modules/@angular/router/esm5/router.js\");\r\nvar ng_bootstrap_1 = __webpack_require__(\"./node_modules/@ng-bootstrap/ng-bootstrap/index.js\");\r\nvar ng_jhipster_1 = __webpack_require__(\"./node_modules/ng-jhipster/index.js\");\r\nvar application_popup_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/application/application-popup.service.ts\");\r\nvar application_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/application/application.service.ts\");\r\nvar image_1 = __webpack_require__(\"./src/main/webapp/app/entities/image/index.ts\");\r\nvar inbound_outbound_1 = __webpack_require__(\"./src/main/webapp/app/entities/inbound-outbound/index.ts\");\r\nvar repositories_1 = __webpack_require__(\"./src/main/webapp/app/entities/repositories/index.ts\");\r\nvar ApplicationDialogComponent = /** @class */ (function () {\r\n    function ApplicationDialogComponent(router, activatedRoute, activeModal, dataUtils, jhiAlertService, applicationService, imageService, inboundOutboundService, repositoryService, elementRef, eventManager) {\r\n        this.router = router;\r\n        this.activatedRoute = activatedRoute;\r\n        this.activeModal = activeModal;\r\n        this.dataUtils = dataUtils;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.applicationService = applicationService;\r\n        this.imageService = imageService;\r\n        this.inboundOutboundService = inboundOutboundService;\r\n        this.repositoryService = repositoryService;\r\n        this.elementRef = elementRef;\r\n        this.eventManager = eventManager;\r\n        this.fileName = \"\";\r\n        this.fileToUpload = null;\r\n        this.createApp = false;\r\n        this.jsonFileSelect = false;\r\n        this.imageChangedEvent = '';\r\n        this.croppedImage = '';\r\n        this.isEdit = false;\r\n        this.InboundOutbounds = [];\r\n        this.InboundOutbounds.push({ protocol: 'tcp', key: '', value: '' });\r\n    }\r\n    ApplicationDialogComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        if (String(this.router.url).includes(\"edit\")) {\r\n            this.ModalTitle = \"Edit Application\";\r\n            this.event = \"Update\";\r\n            this.createApp = false;\r\n            this.jsonFileContent = '{\\n\"NAME\": \"' + this.application.name + '\",\\n' +\r\n                '\"DESCRIPTION\": \"' + this.application.description + '\",\\n' +\r\n                '\"SECRET\": \"' + this.application.secret + '\",\\n' +\r\n                '\"VERSION\": \"' + this.application.version + '\",\\n' +\r\n                '\"CONTAINER_IMAGE\": \"' + this.application.containerImage + '\",\\n' +\r\n                '\"NUMBER_OF_CORES\": \"' + this.application.numberOfCores + '\",\\n' +\r\n                '\"NUMBER_OF_INSTANCES\": \"' + this.application.numberOfInstances + '\",\\n' +\r\n                '\"MEMORY\": \"' + this.application.memory + '\"\\n}';\r\n        }\r\n        else {\r\n            this.ModalTitle = \"Create an Application\";\r\n            this.event = \"Create\";\r\n            this.createApp = true;\r\n        }\r\n        this.isSaving = false;\r\n        this.imageService.query()\r\n            .subscribe(function (res) { _this.images = res.json; }, function (res) { return _this.onError(res.json); });\r\n        this.inboundOutboundService.query()\r\n            .subscribe(function (res) { _this.InboundOutbounds = res.json; }, function (res) { return _this.onError(res.json); });\r\n        this.getAllRepositories();\r\n    };\r\n    ApplicationDialogComponent.prototype.checkURL = function () {\r\n    };\r\n    ApplicationDialogComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    ApplicationDialogComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    ApplicationDialogComponent.prototype.setFileData = function (event, entity, field, isImage) {\r\n        this.fileName = event.currentTarget.files[0].name;\r\n        this.dataUtils.setFileData(event, entity, field, isImage);\r\n    };\r\n    ApplicationDialogComponent.prototype.setJsonFileData = function (event, entity, field, isImage) {\r\n        var _this = this;\r\n        this.jsonFileSelect = true;\r\n        this.fileName = event.currentTarget.files[0].name;\r\n        // this.dataUtils.setFileData(event, entity, field, isImage);\r\n        var file = event.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = function () {\r\n            // this.form.get('avatar').setValue({\r\n            //   filename: file.name,\r\n            //   filetype: file.type,\r\n            //   value: reader.result.split(',')[1]\r\n            // })\r\n            _this.jsonFileContent = reader.result;\r\n            var json = JSON.parse(reader.result);\r\n            console.log(json);\r\n            _this.application.name = json.NAME;\r\n            _this.application.description = json.DESCRIPTION;\r\n            _this.application.version = json.VERSION;\r\n            _this.application.secret = json.SECRET;\r\n            _this.application.containerImage = json.CONTAINER_IMAGE;\r\n            _this.application.numberOfInstances = json.NUMBER_OF_INSTANCES;\r\n            _this.application.numberOfCores = json.NUMBER_OF_CORES;\r\n            _this.application.memory = json.MEMORY;\r\n        };\r\n    };\r\n    ApplicationDialogComponent.prototype.updatejson = function (event) {\r\n        this.jsonFileContent = event.target.value;\r\n        var json = JSON.parse(event.target.value);\r\n        this.application.name = json.NAME;\r\n        this.application.description = json.DESCRIPTION;\r\n        this.application.version = json.VERSION;\r\n        this.application.secret = json.SECRET;\r\n        this.application.containerImage = json.CONTAINER_IMAGE;\r\n        this.application.numberOfInstances = json.NUMBER_OF_INSTANCES;\r\n        this.application.numberOfCores = json.NUMBER_OF_CORES;\r\n        this.application.memory = json.MEMORY;\r\n    };\r\n    ApplicationDialogComponent.prototype.handleFileInput = function (files) {\r\n        this.fileToUpload = files.item(0);\r\n    };\r\n    ApplicationDialogComponent.prototype.upload = function () {\r\n        var fileBrowser = this.fileInput.nativeElement;\r\n        if (fileBrowser.files && fileBrowser.files[0]) {\r\n            var formData = new FormData();\r\n            formData.append('files', fileBrowser.files[0]);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/api/Data/UploadFiles', true);\r\n            xhr.onload = function () {\r\n                if (this['status'] === 200) {\r\n                    var responseText = this['responseText'];\r\n                    var files = JSON.parse(responseText);\r\n                    //todo: emit event\r\n                }\r\n                else {\r\n                    //todo: error handling\r\n                }\r\n            };\r\n            xhr.send(formData);\r\n        }\r\n    };\r\n    ApplicationDialogComponent.prototype.clearInputImage = function (field, fieldContentType, idInput) {\r\n        this.dataUtils.clearInputImage(this.application, this.elementRef, field, fieldContentType, idInput);\r\n        this.fileName = \"\";\r\n    };\r\n    ApplicationDialogComponent.prototype.clearJSON = function () {\r\n        this.jsonFileSelect = false;\r\n        this.myJSONInputVariable.nativeElement.value = '';\r\n    };\r\n    ApplicationDialogComponent.prototype.clear = function () {\r\n        this.activeModal.dismiss('cancel');\r\n    };\r\n    ApplicationDialogComponent.prototype.reset = function () {\r\n        this.isEdit = true;\r\n        this.myInputVariable.nativeElement.value = '';\r\n        this.imageChangedEvent = '';\r\n        this.croppedImage = '';\r\n    };\r\n    ApplicationDialogComponent.prototype.resetJSON = function () {\r\n    };\r\n    ApplicationDialogComponent.prototype.fileChangeEvent = function (event) {\r\n        this.imageChangedEvent = event;\r\n    };\r\n    ApplicationDialogComponent.prototype.imageCropped = function (image) {\r\n        this.application.logo = image.split(\"base64,\")[1];\r\n        this.croppedImage = image;\r\n        this.application.logoContentType = image.split(\";base64,\")[0];\r\n        this.application.logoContentType = this.application.logoContentType.split(\"data:\")[1];\r\n    };\r\n    ApplicationDialogComponent.prototype.imageLoaded = function () {\r\n        // console.log(\"Imge Loaded\");\r\n    };\r\n    ApplicationDialogComponent.prototype.loadImageFailed = function () {\r\n        // console.log(\"Imge Load Failed\");\r\n    };\r\n    ApplicationDialogComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        /* if(this.InboundOutbounds && this.InboundOutbounds.length > 0){\r\n              this.application.inboundOutboundPorts = [];\r\n              for(const data of this.InboundOutbounds){\r\n                  let dataObj:InboundOutbound;\r\n                  dataObj = new InboundOutbound (0,data.protocol,data.key,data.value,null);\r\n                  this.application.inboundOutboundPorts.push(dataObj);\r\n              }\r\n          } */\r\n        if (this.application.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.applicationService.update(this.application));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.applicationService.create(this.application));\r\n        }\r\n    };\r\n    ApplicationDialogComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) {\r\n            return _this.onSaveSuccess(res);\r\n        }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    ApplicationDialogComponent.prototype.onSaveSuccess = function (result) {\r\n        this.eventManager.broadcast({ name: 'applicationListModification', content: 'OK' });\r\n        this.isSaving = false;\r\n        this.activeModal.dismiss(result);\r\n    };\r\n    ApplicationDialogComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    ApplicationDialogComponent.prototype.onError = function (error) {\r\n        this.jhiAlertService.error(error.message, null, null);\r\n    };\r\n    ApplicationDialogComponent.prototype.getAllRepositories = function () {\r\n        var _this = this;\r\n        this.repositoryService.query().subscribe(function (res) {\r\n            _this.repositories = res.json;\r\n        }, function (res) { return _this.onError(res.json); });\r\n    };\r\n    ApplicationDialogComponent.prototype.trackImageById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ApplicationDialogComponent.prototype.trackInboundOutboundById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ApplicationDialogComponent.prototype.getSelected = function (selectedVals, option) {\r\n        if (selectedVals) {\r\n            for (var i = 0; i < selectedVals.length; i++) {\r\n                if (option.id === selectedVals[i].id) {\r\n                    return selectedVals[i];\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild('fileInput'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ApplicationDialogComponent.prototype, \"fileInput\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('myInput'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ApplicationDialogComponent.prototype, \"myInputVariable\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('myJSONInput'),\r\n        __metadata(\"design:type\", Object)\r\n    ], ApplicationDialogComponent.prototype, \"myJSONInputVariable\", void 0);\r\n    ApplicationDialogComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-application-dialog',\r\n            template: __webpack_require__(\"./src/main/webapp/app/entities/application/application-dialog.component.html\")\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router,\r\n            router_1.ActivatedRoute,\r\n            ng_bootstrap_1.NgbActiveModal,\r\n            ng_jhipster_1.JhiDataUtils,\r\n            ng_jhipster_1.JhiAlertService,\r\n            application_service_1.ApplicationService,\r\n            image_1.ImageService,\r\n            inbound_outbound_1.InboundOutboundService,\r\n            repositories_1.RepositoriesService,\r\n            core_1.ElementRef,\r\n            ng_jhipster_1.JhiEventManager])\r\n    ], ApplicationDialogComponent);\r\n    return ApplicationDialogComponent;\r\n}());\r\nexports.ApplicationDialogComponent = ApplicationDialogComponent;\r\nvar ApplicationPopupComponent = /** @class */ (function () {\r\n    function ApplicationPopupComponent(route, applicationPopupService) {\r\n        this.route = route;\r\n        this.applicationPopupService = applicationPopupService;\r\n    }\r\n    ApplicationPopupComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.routeSub = this.route.params.subscribe(function (params) {\r\n            if (params['id']) {\r\n                _this.applicationPopupService\r\n                    .open(ApplicationDialogComponent, params['id']);\r\n            }\r\n            else {\r\n                _this.applicationPopupService\r\n                    .open(ApplicationDialogComponent);\r\n            }\r\n        });\r\n    };\r\n    ApplicationPopupComponent.prototype.ngOnDestroy = function () {\r\n        this.routeSub.unsubscribe();\r\n    };\r\n    ApplicationPopupComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-application-popup',\r\n            template: ''\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n            application_popup_service_1.ApplicationPopupService])\r\n    ], ApplicationPopupComponent);\r\n    return ApplicationPopupComponent;\r\n}());\r\nexports.ApplicationPopupComponent = ApplicationPopupComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL2FwcGxpY2F0aW9uL2FwcGxpY2F0aW9uLWRpYWxvZy5jb21wb25lbnQudHM/ZWNhMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLDhFQUFtRztBQUVuRyxvRkFBeUQ7QUFJekQsK0ZBQTREO0FBQzVELCtFQUE0RTtBQUc1RSxpSUFBb0U7QUFDcEUscUhBQTJEO0FBQzNELG1GQUErQztBQUMvQyx5R0FBOEU7QUFHOUUsaUdBQWtFO0FBU2xFO0lBMkJJLG9DQUNZLE1BQWMsRUFDZCxjQUE4QixFQUMvQixXQUEyQixFQUMxQixTQUF1QixFQUN2QixlQUFnQyxFQUNoQyxrQkFBc0MsRUFDdEMsWUFBMEIsRUFDMUIsc0JBQThDLEVBQzlDLGlCQUFzQyxFQUN0QyxVQUFzQixFQUN0QixZQUE2QjtRQVY3QixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQy9CLGdCQUFXLEdBQVgsV0FBVyxDQUFnQjtRQUMxQixjQUFTLEdBQVQsU0FBUyxDQUFjO1FBQ3ZCLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUNoQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3RDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7UUFDOUMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFxQjtRQUN0QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQTdCbEMsYUFBUSxHQUFVLEVBQUUsQ0FBQztRQUk1QixpQkFBWSxHQUFTLElBQUksQ0FBQztRQUUxQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBQzNCLG1CQUFjLEdBQVUsS0FBSyxDQUFDO1FBQzlCLHNCQUFpQixHQUFRLEVBQUUsQ0FBQztRQUM1QixpQkFBWSxHQUFRLEVBQUUsQ0FBQztRQUt2QixXQUFNLEdB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Q0FBQztnQkFDSixLQUFJLENBQUMsdUJBQXVCO3FCQUN2QixJQUFJLENBQUMsMEJBQXVDLENBQUMsQ0FBQztZQUN2RCxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsK0NBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQXZCUSx5QkFBeUI7UUFKckMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsUUFBUSxFQUFFLEVBQUU7U0FDZixDQUFDO3lDQU1xQix1QkFBYztZQUNJLG1EQUF1QjtPQU5uRCx5QkFBeUIsQ0F3QnJDO0lBQUQsZ0NBQUM7Q0FBQTtBQXhCWSw4REFBeUIiLCJmaWxlIjoiLi9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL2FwcGxpY2F0aW9uL2FwcGxpY2F0aW9uLWRpYWxvZy5jb21wb25lbnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQsIFZpZXdDaGlsZCAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgUm91dGVyLCBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2h0dHAnO1xuXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9SeCc7XG5pbXBvcnQgeyBOZ2JBY3RpdmVNb2RhbCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcbmltcG9ydCB7IEpoaUV2ZW50TWFuYWdlciwgSmhpQWxlcnRTZXJ2aWNlLEpoaURhdGFVdGlscyB9IGZyb20gJ25nLWpoaXBzdGVyJztcblxuaW1wb3J0IHsgQXBwbGljYXRpb24gfSBmcm9tICcuL2FwcGxpY2F0aW9uLm1vZGVsJztcbmltcG9ydCB7QXBwbGljYXRpb25Qb3B1cFNlcnZpY2V9IGZyb20gJy4vYXBwbGljYXRpb24tcG9wdXAuc2VydmljZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuL2FwcGxpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW1hZ2UsIEltYWdlU2VydmljZSB9IGZyb20gJy4uL2ltYWdlJztcbmltcG9ydCB7IEluYm91bmRPdXRib3VuZCwgSW5ib3VuZE91dGJvdW5kU2VydmljZSB9IGZyb20gJy4uL2luYm91bmQtb3V0Ym91bmQnO1xuaW1wb3J0IHsgUmVzcG9uc2VXcmFwcGVyIH0gZnJvbSAgJy4uLy4uL3NoYXJlZCc7XG5cbmltcG9ydCB7UmVwb3NpdG9yaWVzLCBSZXBvc2l0b3JpZXNTZXJ2aWNlfSBmcm9tIFwiLi4vcmVwb3NpdG9yaWVzXCI7XG5pbXBvcnQge05nTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvY29tcGlsZXIvc3JjL2NvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdqaGktYXBwbGljYXRpb24tZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYXBwbGljYXRpb24tZGlhbG9nLmNvbXBvbmVudC5odG1sJ1xufSlcblxuXG5leHBvcnQgY2xhc3MgQXBwbGljYXRpb25EaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG5cbiAgICBAVmlld0NoaWxkKCdmaWxlSW5wdXQnKSBmaWxlSW5wdXQ7XG5cbiAgICBhcHBsaWNhdGlvbjogQXBwbGljYXRpb247XG4gICAgaXNTYXZpbmc6IGJvb2xlYW47XG5cbiAgICBpbWFnZXM6IEltYWdlW107XG4gICAgcHVibGljIGZpbGVOYW1lIDogc3RyaW5nPVwiXCI7XG4gICAgcmVwb3NpdG9yaWVzIDogUmVwb3NpdG9yaWVzO1xuICAgIEluYm91bmRPdXRib3VuZHM6IGFueVtdO1xuICAgIEluYm91bmRPdXRib3VuZCA6IEluYm91bmRPdXRib3VuZFtdO1xuICAgIGZpbGVUb1VwbG9hZDogRmlsZSA9IG51bGw7XG4gICAganNvbkZpbGVDb250ZW50OiBTdHJpbmc7XG4gICAgY3JlYXRlQXBwOiBib29sZWFuID0gZmFsc2U7XG4gICAganNvbkZpbGVTZWxlY3Q6IGJvb2xlYW49ZmFsc2U7XG4gICAgaW1hZ2VDaGFuZ2VkRXZlbnQ6IGFueSA9ICcnO1xuICAgIGNyb3BwZWRJbWFnZTogYW55ID0gJyc7XG4gICAgQFZpZXdDaGlsZCgnbXlJbnB1dCcpXG4gICAgbXlJbnB1dFZhcmlhYmxlOiBhbnk7XG4gICAgQFZpZXdDaGlsZCgnbXlKU09OSW5wdXQnKVxuICAgIG15SlNPTklucHV0VmFyaWFibGU6IGFueTtcbiAgICBpc0VkaXQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIE1vZGFsVGl0bGU6IFN0cmluZztcbiAgICBldmVudDogU3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgICAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICAgICAgcHVibGljIGFjdGl2ZU1vZGFsOiBOZ2JBY3RpdmVNb2RhbCxcbiAgICAgICAgcHJpdmF0ZSBkYXRhVXRpbHM6IEpoaURhdGFVdGlscyxcbiAgICAgICAgcHJpdmF0ZSBqaGlBbGVydFNlcnZpY2U6IEpoaUFsZXJ0U2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBhcHBsaWNhdGlvblNlcnZpY2U6IEFwcGxpY2F0aW9uU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBpbWFnZVNlcnZpY2U6IEltYWdlU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBpbmJvdW5kT3V0Ym91bmRTZXJ2aWNlOiBJbmJvdW5kT3V0Ym91bmRTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHJlcG9zaXRvcnlTZXJ2aWNlOiBSZXBvc2l0b3JpZXNTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgICAgIHByaXZhdGUgZXZlbnRNYW5hZ2VyOiBKaGlFdmVudE1hbmFnZXIsXG4gICAgICAvLyAgcHJpdmF0ZSBhcHBsaWNhdGlvbmltcG9ydDpBcHBsaWNhdGlvbkltcG9ydENvbXBvbmVudCxcbiAgICApIHtcbiAgICAgICAgdGhpcy5JbmJvdW5kT3V0Ym91bmRzPVtdO1xuICAgICAgICB0aGlzLkluYm91bmRPdXRib3VuZHMucHVzaCh7cHJvdG9jb2w6J3RjcCcsa2V5OicnLCB2YWx1ZTonJ30pO1xuXG4gICAgfVxuXG5cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZihTdHJpbmcodGhpcy5yb3V0ZXIudXJsKS5pbmNsdWRlcyhcImVkaXRcIikpe1xuICAgICAgICAgICAgdGhpcy5Nb2RhbFRpdGxlPVwiRWRpdCBBcHBsaWNhdGlvblwiO1xuICAgICAgICAgICAgdGhpcy5ldmVudD1cIlVwZGF0ZVwiO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVBcHAgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuanNvbkZpbGVDb250ZW50ID0gJ3tcXG5cIk5BTUVcIjogXCInICsgdGhpcy5hcHBsaWNhdGlvbi5uYW1lICsgJ1wiLFxcbicrXG4gICAgICAgICAgICAnXCJERVNDUklQVElPTlwiOiBcIicgKyB0aGlzLmFwcGxpY2F0aW9uLmRlc2NyaXB0aW9uICsgJ1wiLFxcbicrXG4gICAgICAgICAgICAnXCJTRUNSRVRcIjogXCInICsgdGhpcy5hcHBsaWNhdGlvbi5zZWNyZXQgKyAnXCIsXFxuJytcbiAgICAgICAgICAgICdcIlZFUlNJT05cIjogXCInICsgdGhpcy5hcHBsaWNhdGlvbi52ZXJzaW9uICsgJ1wiLFxcbicrXG4gICAgICAgICAgICAnXCJDT05UQUlORVJfSU1BR0VcIjogXCInICsgdGhpcy5hcHBsaWNhdGlvbi5jb250YWluZXJJbWFnZSArICdcIixcXG4nK1xuICAgICAgICAgICAgJ1wiTlVNQkVSX09GX0NPUkVTXCI6IFwiJyArIHRoaXMuYXBwbGljYXRpb24ubnVtYmVyT2ZDb3JlcyArICdcIixcXG4nK1xuICAgICAgICAgICAgJ1wiTlVNQkVSX09GX0lOU1RBTkNFU1wiOiBcIicgKyB0aGlzLmFwcGxpY2F0aW9uLm51bWJlck9mSW5zdGFuY2VzICsgJ1wiLFxcbicrXG4gICAgICAgICAgICAnXCJNRU1PUllcIjogXCInICsgdGhpcy5hcHBsaWNhdGlvbi5tZW1vcnkgKyAnXCJcXG59JztcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgdGhpcy5Nb2RhbFRpdGxlPVwiQ3JlYXRlIGFuIEFwcGxpY2F0aW9uXCI7XG4gICAgICAgICAgICB0aGlzLmV2ZW50PVwiQ3JlYXRlXCI7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUFwcCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc1NhdmluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmltYWdlU2VydmljZS5xdWVyeSgpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKChyZXM6IFJlc3BvbnNlV3JhcHBlcikgPT4geyB0aGlzLmltYWdlcyA9IHJlcy5qc29uOyB9LCAocmVzOiBSZXNwb25zZVdyYXBwZXIpID0+IHRoaXMub25FcnJvcihyZXMuanNvbikpO1xuICAgICAgICB0aGlzLmluYm91bmRPdXRib3VuZFNlcnZpY2UucXVlcnkoKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgocmVzOiBSZXNwb25zZVdyYXBwZXIpID0+IHsgdGhpcy5JbmJvdW5kT3V0Ym91bmRzID0gcmVzLmpzb247IH0sIChyZXM6IFJlc3BvbnNlV3JhcHBlcikgPT4gdGhpcy5vbkVycm9yKHJlcy5qc29uKSk7XG4gICAgICAgIHRoaXMuZ2V0QWxsUmVwb3NpdG9yaWVzKCk7XG4gICAgfVxuICAgIGNoZWNrVVJMKCl7XG4gICAgICAgXG4gICAgfVxuXG4gICAgYnl0ZVNpemUoZmllbGQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVV0aWxzLmJ5dGVTaXplKGZpZWxkKTtcbiAgICB9XG5cbiAgICBvcGVuRmlsZShjb250ZW50VHlwZSwgZmllbGQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVV0aWxzLm9wZW5GaWxlKGNvbnRlbnRUeXBlLCBmaWVsZCk7XG4gICAgfVxuXG4gICAgc2V0RmlsZURhdGEoZXZlbnQsIGVudGl0eSwgZmllbGQsIGlzSW1hZ2UpIHtcbiAgICAgICAgdGhpcy5maWxlTmFtZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZmlsZXNbMF0ubmFtZTtcbiAgICAgICAgdGhpcy5kYXRhVXRpbHMuc2V0RmlsZURhdGEoZXZlbnQsIGVudGl0eSwgZmllbGQsIGlzSW1hZ2UpO1xuICAgIH1cblxuICAgIHNldEpzb25GaWxlRGF0YShldmVudCwgZW50aXR5LCBmaWVsZCwgaXNJbWFnZSkge1xuICAgICAgICB0aGlzLmpzb25GaWxlU2VsZWN0PXRydWU7XG4gICAgICAgIHRoaXMuZmlsZU5hbWUgPSBldmVudC5jdXJyZW50VGFyZ2V0LmZpbGVzWzBdLm5hbWU7XG4gICAgICAgIC8vIHRoaXMuZGF0YVV0aWxzLnNldEZpbGVEYXRhKGV2ZW50LCBlbnRpdHksIGZpZWxkLCBpc0ltYWdlKTtcbiAgICAgICAgbGV0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07XG4gICAgICAgIGxldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTtcbiAgICAgICAgcmVhZGVyLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgICAgIC8vIHRoaXMuZm9ybS5nZXQoJ2F2YXRhcicpLnNldFZhbHVlKHtcbiAgICAgICAgICAgIC8vICAgZmlsZW5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICAgIC8vICAgZmlsZXR5cGU6IGZpbGUudHlwZSxcbiAgICAgICAgICAgIC8vICAgdmFsdWU6IHJlYWRlci5yZXN1bHQuc3BsaXQoJywnKVsxXVxuICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgIHRoaXMuanNvbkZpbGVDb250ZW50ID0gcmVhZGVyLnJlc3VsdDtcbiAgICAgICAgICAgIHZhciBqc29uID0gSlNPTi5wYXJzZShyZWFkZXIucmVzdWx0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5uYW1lID0ganNvbi5OQU1FO1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5kZXNjcmlwdGlvbiA9IGpzb24uREVTQ1JJUFRJT047XG4gICAgICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLnZlcnNpb24gPSBqc29uLlZFUlNJT047XG4gICAgICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLnNlY3JldCA9IGpzb24uU0VDUkVUO1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5jb250YWluZXJJbWFnZSA9IGpzb24uQ09OVEFJTkVSX0lNQUdFO1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5udW1iZXJPZkluc3RhbmNlcyA9IGpzb24uTlVNQkVSX09GX0lOU1RBTkNFUztcbiAgICAgICAgICAgIHRoaXMuYXBwbGljYXRpb24ubnVtYmVyT2ZDb3JlcyA9IGpzb24uTlVNQkVSX09GX0NPUkVTO1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5tZW1vcnkgPSBqc29uLk1FTU9SWTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB1cGRhdGVqc29uKGV2ZW50KXtcbiAgICAgICAgdGhpcy5qc29uRmlsZUNvbnRlbnQgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICAgIHZhciBqc29uID0gSlNPTi5wYXJzZShldmVudC50YXJnZXQudmFsdWUpO1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLm5hbWUgPSBqc29uLk5BTUU7XG4gICAgICAgIHRoaXMuYXBwbGljYXRpb24uZGVzY3JpcHRpb24gPSBqc29uLkRFU0NSSVBUSU9OO1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLnZlcnNpb24gPSBqc29uLlZFUlNJT047XG4gICAgICAgIHRoaXMuYXBwbGljYXRpb24uc2VjcmV0ID0ganNvbi5TRUNSRVQ7XG4gICAgICAgIHRoaXMuYXBwbGljYXRpb24uY29udGFpbmVySW1hZ2UgPSBqc29uLkNPTlRBSU5FUl9JTUFHRTtcbiAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5udW1iZXJPZkluc3RhbmNlcyA9IGpzb24uTlVNQkVSX09GX0lOU1RBTkNFUztcbiAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5udW1iZXJPZkNvcmVzID0ganNvbi5OVU1CRVJfT0ZfQ09SRVM7XG4gICAgICAgIHRoaXMuYXBwbGljYXRpb24ubWVtb3J5ID0ganNvbi5NRU1PUlk7XG4gICAgfVxuXG4gICAgaGFuZGxlRmlsZUlucHV0KGZpbGVzOiBGaWxlTGlzdCkge1xuICAgICAgICB0aGlzLmZpbGVUb1VwbG9hZCA9IGZpbGVzLml0ZW0oMCk7XG4gICAgfVxuXG5cbiAgICBwcml2YXRlIHVwbG9hZCgpIHtcbiAgICAgICAgY29uc3QgZmlsZUJyb3dzZXIgPSB0aGlzLmZpbGVJbnB1dC5uYXRpdmVFbGVtZW50O1xuICAgICAgICBpZiAoZmlsZUJyb3dzZXIuZmlsZXMgJiYgZmlsZUJyb3dzZXIuZmlsZXNbMF0pIHtcbiAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZXMnLCBmaWxlQnJvd3Nlci5maWxlc1swXSk7XG4gICAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgICAgeGhyLm9wZW4oJ1BPU1QnLCAnL2FwaS9EYXRhL1VwbG9hZEZpbGVzJywgdHJ1ZSk7XG4gICAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzWydzdGF0dXMnXSA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gdGhpc1sncmVzcG9uc2VUZXh0J107XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsZXMgPSBKU09OLnBhcnNlKHJlc3BvbnNlVGV4dCk7XG4gICAgICAgICAgICAgICAgLy90b2RvOiBlbWl0IGV2ZW50XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvL3RvZG86IGVycm9yIGhhbmRsaW5nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgICB4aHIuc2VuZChmb3JtRGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuXG5cblxuICAgIGNsZWFySW5wdXRJbWFnZShmaWVsZDogc3RyaW5nLCBmaWVsZENvbnRlbnRUeXBlOiBzdHJpbmcsIGlkSW5wdXQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLmRhdGFVdGlscy5jbGVhcklucHV0SW1hZ2UodGhpcy5hcHBsaWNhdGlvbiwgdGhpcy5lbGVtZW50UmVmLCBmaWVsZCwgZmllbGRDb250ZW50VHlwZSwgaWRJbnB1dCk7XG4gICAgICAgIHRoaXMuZmlsZU5hbWUgPSBcIlwiO1xuICAgIH1cblxuICAgIGNsZWFySlNPTigpe1xuICAgICAgICB0aGlzLmpzb25GaWxlU2VsZWN0PWZhbHNlO1xuICAgICAgICB0aGlzLm15SlNPTklucHV0VmFyaWFibGUubmF0aXZlRWxlbWVudC52YWx1ZT0nJztcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgICAgIHRoaXMuYWN0aXZlTW9kYWwuZGlzbWlzcygnY2FuY2VsJyk7XG4gICAgfVxuXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuaXNFZGl0PXRydWU7XG4gICAgICAgIHRoaXMubXlJbnB1dFZhcmlhYmxlLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSAnJztcbiAgICAgICAgdGhpcy5pbWFnZUNoYW5nZWRFdmVudD0nJztcbiAgICAgICAgdGhpcy5jcm9wcGVkSW1hZ2U9Jyc7XG4gICAgfVxuXG4gICAgcmVzZXRKU09OKCl7XG4gICAgfVxuXG4gICAgZmlsZUNoYW5nZUV2ZW50KGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pbWFnZUNoYW5nZWRFdmVudCA9IGV2ZW50O1xuICAgIH1cbiAgICBpbWFnZUNyb3BwZWQoaW1hZ2U6IHN0cmluZykge1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLmxvZ289aW1hZ2Uuc3BsaXQoXCJiYXNlNjQsXCIpWzFdO1xuICAgICAgICB0aGlzLmNyb3BwZWRJbWFnZSA9IGltYWdlO1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLmxvZ29Db250ZW50VHlwZT1pbWFnZS5zcGxpdChcIjtiYXNlNjQsXCIpWzBdO1xuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uLmxvZ29Db250ZW50VHlwZT10aGlzLmFwcGxpY2F0aW9uLmxvZ29Db250ZW50VHlwZS5zcGxpdChcImRhdGE6XCIpWzFdO1xuICAgICAgICBcbiAgICB9XG4gICAgaW1hZ2VMb2FkZWQoKSB7XG4gICAgICAgLy8gY29uc29sZS5sb2coXCJJbWdlIExvYWRlZFwiKTtcbiAgICB9XG4gICAgbG9hZEltYWdlRmFpbGVkKCkge1xuICAgICAgIC8vIGNvbnNvbGUubG9nKFwiSW1nZSBMb2FkIEZhaWxlZFwiKTtcbiAgICB9XG5cbiAgICBzYXZlKCkge1xuXG5cbiAgICAgICAgdGhpcy5pc1NhdmluZyA9IHRydWU7XG4gICAgICAvKiBpZih0aGlzLkluYm91bmRPdXRib3VuZHMgJiYgdGhpcy5JbmJvdW5kT3V0Ym91bmRzLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbi5pbmJvdW5kT3V0Ym91bmRQb3J0cyA9IFtdO1xuICAgICAgICAgICAgZm9yKGNvbnN0IGRhdGEgb2YgdGhpcy5JbmJvdW5kT3V0Ym91bmRzKXtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YU9iajpJbmJvdW5kT3V0Ym91bmQ7XG4gICAgICAgICAgICAgICAgZGF0YU9iaiA9IG5ldyBJbmJvdW5kT3V0Ym91bmQgKDAsZGF0YS5wcm90b2NvbCxkYXRhLmtleSxkYXRhLnZhbHVlLG51bGwpO1xuICAgICAgICAgICAgICAgIHRoaXMuYXBwbGljYXRpb24uaW5ib3VuZE91dGJvdW5kUG9ydHMucHVzaChkYXRhT2JqKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSAqL1xuXG4gICAgICAgIGlmICh0aGlzLmFwcGxpY2F0aW9uLmlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaWJlVG9TYXZlUmVzcG9uc2UoXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvblNlcnZpY2UudXBkYXRlKHRoaXMuYXBwbGljYXRpb24pKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaWJlVG9TYXZlUmVzcG9uc2UoXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvblNlcnZpY2UuY3JlYXRlKHRoaXMuYXBwbGljYXRpb24pKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgc3Vic2NyaWJlVG9TYXZlUmVzcG9uc2UocmVzdWx0OiBPYnNlcnZhYmxlPEFwcGxpY2F0aW9uPikge1xuICAgICAgICByZXN1bHQuc3Vic2NyaWJlKChyZXM6IEFwcGxpY2F0aW9uKSA9PlxuICAgICAgICAgICAgdGhpcy5vblNhdmVTdWNjZXNzKHJlcyksIChyZXM6IFJlc3BvbnNlKSA9PiB0aGlzLm9uU2F2ZUVycm9yKCkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25TYXZlU3VjY2VzcyhyZXN1bHQ6IEFwcGxpY2F0aW9uKSB7XG4gICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyLmJyb2FkY2FzdCh7IG5hbWU6ICdhcHBsaWNhdGlvbkxpc3RNb2RpZmljYXRpb24nLCBjb250ZW50OiAnT0snfSk7XG4gICAgICAgIHRoaXMuaXNTYXZpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5hY3RpdmVNb2RhbC5kaXNtaXNzKHJlc3VsdCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblNhdmVFcnJvcigpIHtcbiAgICAgICAgdGhpcy5pc1NhdmluZyA9IGZhbHNlO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25FcnJvcihlcnJvcjogYW55KSB7XG4gICAgICAgIHRoaXMuamhpQWxlcnRTZXJ2aWNlLmVycm9yKGVycm9yLm1lc3NhZ2UsIG51bGwsIG51bGwpO1xuICAgIH1cbiAgICBnZXRBbGxSZXBvc2l0b3JpZXMoKSB7XG4gICAgICAgIHRoaXMucmVwb3NpdG9yeVNlcnZpY2UucXVlcnkoKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAocmVzOiBSZXNwb25zZVdyYXBwZXIpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlcG9zaXRvcmllcz0gcmVzLmpzb247XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgKHJlczogUmVzcG9uc2VXcmFwcGVyKSA9PiB0aGlzLm9uRXJyb3IocmVzLmpzb24pXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgdHJhY2tJbWFnZUJ5SWQoaW5kZXg6IG51bWJlciwgaXRlbTogSW1hZ2UpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uaWQ7XG4gICAgfVxuXG4gICAgdHJhY2tJbmJvdW5kT3V0Ym91bmRCeUlkKGluZGV4OiBudW1iZXIsIGl0ZW06IEluYm91bmRPdXRib3VuZCkge1xuICAgICAgICByZXR1cm4gaXRlbS5pZDtcbiAgICB9XG5cbiAgICBnZXRTZWxlY3RlZChzZWxlY3RlZFZhbHM6IEFycmF5PGFueT4sIG9wdGlvbjogYW55KSB7XG4gICAgICAgIGlmIChzZWxlY3RlZFZhbHMpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0ZWRWYWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5pZCA9PT0gc2VsZWN0ZWRWYWxzW2ldLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFZhbHNbaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvcHRpb247XG4gICAgfVxufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2poaS1hcHBsaWNhdGlvbi1wb3B1cCcsXG4gICAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEFwcGxpY2F0aW9uUG9wdXBDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgICByb3V0ZVN1YjogYW55O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgICAgICBwcml2YXRlIGFwcGxpY2F0aW9uUG9wdXBTZXJ2aWNlOiBBcHBsaWNhdGlvblBvcHVwU2VydmljZVxuICAgICkge31cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnJvdXRlU3ViID0gdGhpcy5yb3V0ZS5wYXJhbXMuc3Vic2NyaWJlKChwYXJhbXMpID0+IHtcbiAgICAgICAgICAgIGlmICggcGFyYW1zWydpZCddICkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXBwbGljYXRpb25Qb3B1cFNlcnZpY2VcbiAgICAgICAgICAgICAgICAgICAgLm9wZW4oQXBwbGljYXRpb25EaWFsb2dDb21wb25lbnQgYXMgQ29tcG9uZW50LCBwYXJhbXNbJ2lkJ10pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGxpY2F0aW9uUG9wdXBTZXJ2aWNlXG4gICAgICAgICAgICAgICAgICAgIC5vcGVuKEFwcGxpY2F0aW9uRGlhbG9nQ29tcG9uZW50IGFzIENvbXBvbmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICB0aGlzLnJvdXRlU3ViLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vbm9kZV9tb2R1bGVzL3RzbGludC1sb2FkZXIhLi9zcmMvbWFpbi93ZWJhcHAvYXBwL2VudGl0aWVzL2FwcGxpY2F0aW9uL2FwcGxpY2F0aW9uLWRpYWxvZy5jb21wb25lbnQudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main/webapp/app/entities/application/application-dialog.component.ts\n");

/***/ })

})