webpackHotUpdate(1,{

/***/ "./src/main/webapp/app/entities/deployment/deployment-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/*import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Response } from '@angular/http';\r\n\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JhiEventManager, JhiAlertService } from 'ng-jhipster';\r\nimport {Stages} from \"../stages\";\r\nimport {TenantDetails} from \"../tenant-details\";\r\nimport {Repositories} from \"../repositories\";\r\nimport {InboundOutbound,InboundOutboundService} from \"../inbound-outbound\";\r\nimport {TenantDetailsService} from \"../tenant-details\";\r\nimport {StagesService} from \"../stages\";\r\nimport {RepositoriesService} from \"../repositories\";\r\n\r\nimport { Deployment } from './deployment.model';\r\nimport { ITEMS_PER_PAGE, Principal, ResponseWrapper } from '../../shared';\r\n\r\nimport { DeploymentPopupService } from './deployment-popup.service';\r\nimport { DeploymentService } from './deployment.service';\r\nimport { Application, ApplicationService } from '../application';\r\n\r\nimport {AppService} from \"../../app.service\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'jhi-deployment-dialog',\r\n    template: require('./deployment-dialog.component.html')\r\n})\r\nexport class DeploymentDialogComponent implements OnInit {\r\n\r\n    deployments: Deployment;\r\n    isSaving: boolean;\r\n    stages: Stages;\r\n    tenantdetails: TenantDetails;\r\n    repositories: Repositories;\r\n    applications: Application;\r\n    inboundOutbound: any[];\r\n   // InboundOutbound : InboundOutbound[];\r\n\r\n\r\n    constructor(\r\n        public activeModal: NgbActiveModal,\r\n        private jhiAlertService: JhiAlertService,\r\n        private deploymentService: DeploymentService,\r\n        private repositoryService:RepositoriesService,\r\n        private stagesService: StagesService,\r\n        private tenantdetailService: TenantDetailsService,\r\n        private applicationService: ApplicationService,\r\n        private eventManager: JhiEventManager,\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private inboundOutboundService: InboundOutboundService,\r\n\r\n\r\n\r\n        private appService: AppService\r\n\r\n\r\n\r\n    ) {\r\n        this.inboundOutbound=[];\r\n        this.inboundOutbound.push({protocol:'tcp',key:'', value:''});\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.getAllRepositories();\r\n        this.getAllStages();\r\n        this.getAllTenantDetails();\r\n        this.applicationService.query()\r\n            .subscribe((res: ResponseWrapper) => { this.applications = res.json; }, (res: ResponseWrapper) => this.onError(res.json));\r\n            this.inboundOutboundService.query()\r\n            .subscribe((res: ResponseWrapper) => { this.inboundOutbound = res.json; }, (res: ResponseWrapper) => this.onError(res.json));\r\n\r\n        }\r\n\r\n    clear() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n\r\n    save() {\r\n\r\n\r\n       // this.appService.loading.showLoading();\r\n\r\n        this.isSaving = true;\r\n        if(this.inboundOutbound && this.inboundOutbound.length > 0){\r\n            this.deployments.inboundOutbound = [];\r\n            for(const data of this.inboundOutbound){\r\n                let dataObj:InboundOutbound;\r\n                dataObj = new InboundOutbound(0,data.protocol,data.key,data.value,null);\r\n                this.deployments.inboundOutbound.push(dataObj);\r\n            }\r\n        }\r\n\r\n        if (this.deployments.id !== undefined) {\r\n            this.subscribeToSaveResponse(\r\n                this.deploymentService.update(this.deployments));\r\n        } else {\r\n            this.subscribeToSaveResponse(\r\n                this.deploymentService.create(this.deployments));\r\n        }\r\n        console.log(\"data check\",this.deploymentService.create(this.deployments));\r\n        this.subscribeToSaveResponse(this.deploymentService.create(this.deployments));\r\n\r\n    }\r\n\r\n\r\n\r\n    getAllStages() {\r\n        this.stagesService.query().subscribe(\r\n            (res: ResponseWrapper) => {\r\n                this.stages = res.json;\r\n            },\r\n            (res: ResponseWrapper) => this.onError(res.json)\r\n        );\r\n    }\r\n\r\n    getAllTenantDetails() {\r\n        this.tenantdetailService.query().subscribe(\r\n            (res: ResponseWrapper) => {\r\n                this.tenantdetails = res.json;\r\n            },\r\n            (res: ResponseWrapper) => this.onError(res.json)\r\n        );\r\n    }\r\n\r\n    getAllRepositories() {\r\n        this.repositoryService.query().subscribe(\r\n            (res: ResponseWrapper) => {\r\n                this.repositories = res.json;\r\n            },\r\n            (res: ResponseWrapper) => this.onError(res.json)\r\n        );\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<Deployment>) {\r\n        result.subscribe((res: Deployment) =>\r\n            this.onSaveSuccess(res), (res: Response) => this.onSaveError());\r\n    }\r\n\r\n    private onSaveSuccess(result: Deployment) {\r\n        this.eventManager.broadcast({ name: 'deploymentListModification', content: 'OK'});\r\n        this.isSaving = false;\r\n        this.activeModal.dismiss(result);\r\n        this.appService.loading.timeoutLoading({execute: ()=>{\r\n                this.router.navigateByUrl('/deployment', { skipLocationChange: true });\r\n            }}, 1000);\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n\r\n        this.appService.loading.hideLoading();\r\n\r\n\r\n    }\r\n\r\n    private onError(error: any) {\r\n        this.jhiAlertService.error(error.message, null, null);\r\n    }\r\n\r\n    trackApplicationById(index: number, item: Application) {\r\n        return item.id;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-deployment-popup',\r\n    template: ''\r\n})\r\nexport class DeploymentPopupComponent implements OnInit, OnDestroy {\r\n\r\n    routeSub: any;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private deploymentPopupService: DeploymentPopupService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.routeSub = this.route.params.subscribe((params) => {\r\n            if (params['appid']){\r\n                this.deploymentPopupService\r\n                    .opennew(DeploymentDialogComponent as Component, null, params['appid']);\r\n            } else if (params['id']) {\r\n                this.deploymentPopupService\r\n                    .open(DeploymentDialogComponent as Component, params['id']);\r\n            } else {\r\n                this.deploymentPopupService\r\n                    .open(DeploymentDialogComponent as Component);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.routeSub.unsubscribe();\r\n    }\r\n} */\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(\"./node_modules/@angular/core/esm5/core.js\");\r\nvar router_1 = __webpack_require__(\"./node_modules/@angular/router/esm5/router.js\");\r\nvar ng_bootstrap_1 = __webpack_require__(\"./node_modules/@ng-bootstrap/ng-bootstrap/index.js\");\r\nvar ng_jhipster_1 = __webpack_require__(\"./node_modules/ng-jhipster/index.js\");\r\nvar deployment_popup_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/deployment/deployment-popup.service.ts\");\r\nvar deployment_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/deployment/deployment.service.ts\");\r\nvar tenant_details_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/tenant-details/tenant-details.service.ts\");\r\nvar stages_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/stages/stages.service.ts\");\r\nvar repositories_service_1 = __webpack_require__(\"./src/main/webapp/app/entities/repositories/repositories.service.ts\");\r\nvar app_service_1 = __webpack_require__(\"./src/main/webapp/app/app.service.ts\");\r\nvar inbound_outbound_model_1 = __webpack_require__(\"./src/main/webapp/app/entities/inbound-outbound/inbound-outbound.model.ts\");\r\nvar DeploymentDialogComponent = /** @class */ (function () {\r\n    function DeploymentDialogComponent(activeModal, jhiAlertService, deploymentsService, repositoryService, stagesService, tenantService, eventManager, router, route, appService) {\r\n        this.activeModal = activeModal;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.deploymentsService = deploymentsService;\r\n        this.repositoryService = repositoryService;\r\n        this.stagesService = stagesService;\r\n        this.tenantService = tenantService;\r\n        this.eventManager = eventManager;\r\n        this.router = router;\r\n        this.route = route;\r\n        this.appService = appService;\r\n    }\r\n    DeploymentDialogComponent.prototype.ngOnInit = function () {\r\n        this.isSaving = false;\r\n        this.getAllStages();\r\n        this.getAllTenants();\r\n        this.getAllRepositories();\r\n    };\r\n    DeploymentDialogComponent.prototype.clear = function () {\r\n        this.activeModal.dismiss('cancel');\r\n    };\r\n    DeploymentDialogComponent.prototype.save = function () {\r\n        this.appService.loading.showLoading();\r\n        this.isSaving = true;\r\n        if (this.inboundOutboundPorts && this.inboundOutboundPorts.length > 0) {\r\n            this.deployments.inboundOutbound = [];\r\n            for (var _i = 0, _a = this.inboundOutboundPorts; _i < _a.length; _i++) {\r\n                var data = _a[_i];\r\n                var dataObj = void 0;\r\n                dataObj = new inbound_outbound_model_1.InboundOutbound(0, data.protocol, data.key, data.value, null);\r\n                this.deployments.inboundOutbound.push(dataObj);\r\n            }\r\n        }\r\n        if (this.deployments.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.deploymentsService.update(this.deployments));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.deploymentsService.create(this.deployments));\r\n        }\r\n    };\r\n    DeploymentDialogComponent.prototype.getAllStages = function () {\r\n        var _this = this;\r\n        this.stagesService.query().subscribe(function (res) {\r\n            _this.stages = res.json;\r\n        }, function (res) { return _this.onError(res.json); });\r\n    };\r\n    DeploymentDialogComponent.prototype.getAllTenants = function () {\r\n        var _this = this;\r\n        this.tenantService.query().subscribe(function (res) {\r\n            _this.tenants = res.json;\r\n        }, function (res) { return _this.onError(res.json); });\r\n    };\r\n    DeploymentDialogComponent.prototype.getAllRepositories = function () {\r\n        var _this = this;\r\n        this.repositoryService.query().subscribe(function (res) {\r\n            _this.repositories = res.json;\r\n        }, function (res) { return _this.onError(res.json); });\r\n    };\r\n    DeploymentDialogComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) {\r\n            return _this.onSaveSuccess(res);\r\n        }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    DeploymentDialogComponent.prototype.onSaveSuccess = function (result) {\r\n        this.eventManager.broadcast({ name: 'deploymentsListModification', content: 'OK' });\r\n        this.isSaving = false;\r\n        this.activeModal.dismiss(result);\r\n        this.router.navigateByUrl('/deployment');\r\n        /* this.appService.loading.timeoutLoading({execute: ()=>{\r\n             this.router.navigateByUrl('/deployment', { skipLocationChange: true });\r\n         }}, 1000);*/\r\n    };\r\n    DeploymentDialogComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n        this.appService.loading.hideLoading();\r\n    };\r\n    DeploymentDialogComponent.prototype.onError = function (error) {\r\n        this.jhiAlertService.error(error.message, null, null);\r\n    };\r\n    DeploymentDialogComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-deployment-dialog',\r\n            template: __webpack_require__(\"./src/main/webapp/app/entities/deployment/deployment-dialog.component.html\")\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ng_bootstrap_1.NgbActiveModal,\r\n            ng_jhipster_1.JhiAlertService,\r\n            deployment_service_1.DeploymentService,\r\n            repositories_service_1.RepositoriesService,\r\n            stages_service_1.StagesService,\r\n            tenant_details_service_1.TenantDetailsService,\r\n            ng_jhipster_1.JhiEventManager,\r\n            router_1.Router,\r\n            router_1.ActivatedRoute,\r\n            app_service_1.AppService])\r\n    ], DeploymentDialogComponent);\r\n    return DeploymentDialogComponent;\r\n}());\r\nexports.DeploymentDialogComponent = DeploymentDialogComponent;\r\nvar DeploymentPopupComponent = /** @class */ (function () {\r\n    function DeploymentPopupComponent(route, deploymentsPopupService) {\r\n        this.route = route;\r\n        this.deploymentsPopupService = deploymentsPopupService;\r\n    }\r\n    DeploymentPopupComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.routeSub = this.route.params.subscribe(function (params) {\r\n            if (params['appid']) {\r\n                _this.deploymentsPopupService\r\n                    .opennew(DeploymentDialogComponent, null, params['appid']);\r\n            }\r\n            else if (params['id']) {\r\n                _this.deploymentsPopupService\r\n                    .open(DeploymentDialogComponent, params['id']);\r\n            }\r\n            else {\r\n                _this.deploymentsPopupService\r\n                    .open(DeploymentDialogComponent);\r\n            }\r\n        });\r\n    };\r\n    DeploymentPopupComponent.prototype.ngOnDestroy = function () {\r\n        this.routeSub.unsubscribe();\r\n    };\r\n    DeploymentPopupComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-deployments-popup',\r\n            template: ''\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n            deployment_popup_service_1.DeploymentPopupService])\r\n    ], DeploymentPopupComponent);\r\n    return DeploymentPopupComponent;\r\n}());\r\nexports.DeploymentPopupComponent = DeploymentPopupComponent;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/webapp/app/entities/deployment/deployment-dialog.component.ts\n");

/***/ })

})